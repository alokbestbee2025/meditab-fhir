import{J as c,q as d,aq as u,I as g,af as W,K as H,O as m,b as R,N as G,E as I,n as v,bb as f,bc as y}from"#entry";const T=c({height:[Number,String],maxHeight:[Number,String],maxWidth:[Number,String],minHeight:[Number,String],minWidth:[Number,String],width:[Number,String]},"dimension");function U(t){return{dimensionStyles:d(()=>{const e={},n=u(t.height),a=u(t.maxHeight),l=u(t.maxWidth),o=u(t.minHeight),i=u(t.minWidth),r=u(t.width);return n!=null&&(e.height=n),a!=null&&(e.maxHeight=a),l!=null&&(e.maxWidth=l),o!=null&&(e.minHeight=o),i!=null&&(e.minWidth=i),r!=null&&(e.width=r),e})}}const h=c({tag:{type:[String,Object,Function],default:"div"}},"tag"),_=c({fluid:{type:Boolean,default:!1},...m(),...T(),...h()},"VContainer"),X=g()({name:"VContainer",props:_(),setup(t,s){let{slots:e}=s;const{rtlClasses:n}=W(),{dimensionStyles:a}=U(t);return H(()=>R(t.tag,{class:I(["v-container",{"v-container--fluid":t.fluid},n.value,t.class]),style:G([a.value,t.style])},e)),{}}}),k=f.reduce((t,s)=>(t[s]={type:[Boolean,String,Number],default:!1},t),{}),j=f.reduce((t,s)=>{const e="offset"+y(s);return t[e]={type:[String,Number],default:null},t},{}),w=f.reduce((t,s)=>{const e="order"+y(s);return t[e]={type:[String,Number],default:null},t},{}),N={col:Object.keys(k),offset:Object.keys(j),order:Object.keys(w)};function B(t,s,e){let n=t;if(!(e==null||e===!1)){if(s){const a=s.replace(t,"");n+=`-${a}`}return t==="col"&&(n="v-"+n),t==="col"&&(e===""||e===!0)||(n+=`-${e}`),n.toLowerCase()}}const F=["auto","start","end","center","baseline","stretch"],K=c({cols:{type:[Boolean,String,Number],default:!1},...k,offset:{type:[String,Number],default:null},...j,order:{type:[String,Number],default:null},...w,alignSelf:{type:String,default:null,validator:t=>F.includes(t)},...m(),...h()},"VCol"),Z=g()({name:"VCol",props:K(),setup(t,s){let{slots:e}=s;const n=d(()=>{const a=[];let l;for(l in N)N[l].forEach(i=>{const r=t[i],C=B(l,i,r);C&&a.push(C)});const o=a.some(i=>i.startsWith("v-col-"));return a.push({"v-col":!o||!t.cols,[`v-col-${t.cols}`]:t.cols,[`offset-${t.offset}`]:t.offset,[`order-${t.order}`]:t.order,[`align-self-${t.alignSelf}`]:t.alignSelf}),a});return()=>v(t.tag,{class:[n.value,t.class],style:t.style},e.default?.())}}),S=["start","end","center"],L=["space-between","space-around","space-evenly"];function b(t,s){return f.reduce((e,n)=>{const a=t+y(n);return e[a]=s(),e},{})}const M=[...S,"baseline","stretch"],P=t=>M.includes(t),$=b("align",()=>({type:String,default:null,validator:P})),z=[...S,...L],E=t=>z.includes(t),x=b("justify",()=>({type:String,default:null,validator:E})),q=[...S,...L,"stretch"],A=t=>q.includes(t),O=b("alignContent",()=>({type:String,default:null,validator:A})),V={align:Object.keys($),justify:Object.keys(x),alignContent:Object.keys(O)},D={align:"align",justify:"justify",alignContent:"align-content"};function J(t,s,e){let n=D[t];if(e!=null){if(s){const a=s.replace(t,"");n+=`-${a}`}return n+=`-${e}`,n.toLowerCase()}}const Y=c({dense:Boolean,noGutters:Boolean,align:{type:String,default:null,validator:P},...$,justify:{type:String,default:null,validator:E},...x,alignContent:{type:String,default:null,validator:A},...O,...m(),...h()},"VRow"),p=g()({name:"VRow",props:Y(),setup(t,s){let{slots:e}=s;const n=d(()=>{const a=[];let l;for(l in V)V[l].forEach(o=>{const i=t[o],r=J(l,o,i);r&&a.push(r)});return a.push({"v-row--no-gutters":t.noGutters,"v-row--dense":t.dense,[`align-${t.align}`]:t.align,[`justify-${t.justify}`]:t.justify,[`align-content-${t.alignContent}`]:t.alignContent}),a});return()=>v(t.tag,{class:["v-row",n.value,t.class],style:t.style},e.default?.())}});export{X as V,p as a,Z as b,h as c,T as m,U as u};
